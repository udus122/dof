# Generated by Django 3.0.3 on 2020-03-01 01:53

import accounts.models
from django.db import migrations, models
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='メールアドレス')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='名')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='姓')),
                ('is_staff', models.BooleanField(default=False, help_text='ユーザーが管理サイトにログイン可能かどうかを示します。', verbose_name='is staff')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether the user should be treated as active.\nUnselect this instead of deleting accounts.', verbose_name='有効')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='登録日')),
                ('a_factor', models.IntegerField(blank=True, null=True, verbose_name='a factor')),
                ('b_factor', models.IntegerField(blank=True, null=True, verbose_name='b factor')),
                ('c_factor', models.IntegerField(blank=True, null=True, verbose_name='c factor')),
                ('d_factor', models.IntegerField(blank=True, null=True, verbose_name='d factor')),
                ('e_factor', models.IntegerField(blank=True, null=True, verbose_name='e factor')),
                ('ffs_type', models.CharField(blank=True, max_length=5, null=True, verbose_name='ffs type')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'ユーザー',
                'verbose_name_plural': 'ユーザー',
            },
            managers=[
                ('objects', accounts.models.CustomUserManager()),
            ],
        ),
    ]
